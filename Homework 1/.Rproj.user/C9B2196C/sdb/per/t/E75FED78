{
    "collab_server" : "",
    "contents" : "not.installed <- function(pkg) !is.element(pkg, installed.packages()[,1])\nif (not.installed(\"MASS\"))  install.packages(\"MASS\")  # we need the MASS package\nlibrary(MASS)  #  load the MASS package\n\n#  Read in a table (in csv format) from standard input:\nTable = data.matrix(read.csv( file(\"HW0_test.csv\"), header=TRUE ))\noutput_file = \"HW0_output.csv\"\n\n# Data Variables\nDistribution = c( \"normal\", \"t\", \"chi-squared\", \"lognormal\", \"exponential\", \"gamma\", \"logistic\", \"beta\", \"weibull\" )\nDistribution_can_have_negative_values = c( TRUE, TRUE, FALSE, FALSE, FALSE, FALSE, TRUE, FALSE, FALSE )\nDistribution_function = c( dnorm, dt, dchisq, dlnorm, dexp, dgamma, dlogis, dbeta, dweibull)\nDistribution_color = c(\"blue\", \"cyan\", \"green\", \"gold\", \"magenta\", \"red\", \"purple\", \"yellow\", \"orange\")\n\n# Add curve to histogram for each distribution    \nadd_curve_graph = function( dist_name, p ) {\n  if (dist_name == \"normal\")      curve( dnorm(x, p[1], p[2] ),    col=\"blue\",   lwd=2, add=TRUE )\n  if (dist_name == \"t\")           suppressWarnings (curve( dt(x, p[1], p[2], p[3] ), col=\"cyan\",   lwd=2, add=TRUE ))\n  if (dist_name == \"chi-squared\") curve( dnorm(x, p[1] ),          col=\"green\",  lwd=2, add=TRUE )\n  if (dist_name == \"lognormal\")   curve( dlnorm(x, p[1], p[2] ),   col=\"gold\",   lwd=2, add=TRUE )\n  if (dist_name == \"exponential\") curve( dexp(x, p[1] ),           col=\"magenta\",lwd=2, add=TRUE )\n  if (dist_name == \"gamma\")       curve( dgamma(x, p[1], p[2] ),   col=\"red\",    lwd=2, add=TRUE )\n  if (dist_name == \"logistic\" )   curve( dlogis(x, p[1], p[2] ),   col=\"purple\", lwd=2, add=TRUE )\n  if (dist_name == \"beta\" )       curve( dlogis(x, p[1], p[2] ),   col=\"yellow\", lwd=2, add=TRUE )\n  if (dist_name == \"weibull\" )    curve( dlogis(x, p[1], p[2] ),   col=\"orange\", lwd=2, add=TRUE )\n}    \n\n# Delete output csv if it exists\nif (file.exists(output_file)) {\n  file.remove(output_file)\n}\n\n# Loop through each column of input Table\nfor (j in 1:ncol(Table)) {\n  Dataset = Table[,j]\n  Dataset_is_nonnegative = !any( Dataset < 0 )\n  Dataset_in_range_0_to_1 = Dataset_is_nonnegative & !any(Dataset < 1)\n  maximum_likelihood = -Inf\n  \n  cat(sprintf(\"\\nWorking on Dataset %d:\\n\", j))\n  \n  # Plot histogram for the dataset\n  hist( Dataset, col=\"gray90\", probability=TRUE ) \n  legend( \"topright\", Distribution, col=Distribution_color, lwd=3 )\n  \n  # Loop through each distribution and check for likelihood\n  for (i in 1:length(Distribution)) {\n    dist_name = Distribution[i]\n    \n    \n    if (Distribution_can_have_negative_values[i] || Dataset_is_nonnegative) {\n      \n      if (dist_name == \"beta\") {\n        if( Dataset_in_range_0_to_1 )\n          fit = suppressWarning( fitdistr ( Dataset, dist_name , start=list( shape1=0.5, shape2=0.5 ) ) )\n        else\n          next\n      }\n      else if (dist_name == \"chi-squared\") {\n        fit = suppressWarnings( fitdistr( Dataset, dist_name, start=list( df=3 ) , method=\"BFGS\" ) )\n      }\n      else {\n        fit = suppressWarnings( fitdistr( Dataset, dist_name ) )\n      }\n      \n      fitted_parameters = fit$estimate\n      log_likelihood = fit$loglik\n      \n      parameter_value_string = paste(round(fitted_parameters), collapse=\",\")\n      cat(sprintf(\"%s %s\\n\", dist_name, parameter_value_string))  \n      cat(sprintf(\"               log-likelihood = %f\\n\", log_likelihood))\n      \n      if (log_likelihood > maximum_likelihood) {\n        maximum_likelihood = log_likelihood\n        dataset_distribution = dist_name\n        dataset_parameters = parameter_value_string\n      }\n      \n      add_curve_graph( dist_name, fitted_parameters )  # show the fit on the histogram\n    }\n  }\n  cat(\"Distribution of Dataset : \\n\")\n  cat(sprintf(\"%s %s\\n\", dataset_distribution, dataset_parameters))\n  \n  # output distribution to csv file\n  csv_output = paste(dataset_distribution, dataset_parameters, sep = \",\")\n  if (dataset_distribution != \"t\")\n    csv_output = paste(csv_output, \",\" , collapse = \"\", sep = \"\")\n  cat(csv_output,file = output_file, sep = \"\\n\", append = TRUE)\n}\n# output distribution to Console\ncat(\"\\nDistributions Output:\\n\", readChar(output_file, 1e5))",
    "created" : 1460335282451.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1752624331",
    "id" : "E75FED78",
    "lastKnownWriteTime" : 1460342458,
    "last_content_update" : 1460342458371,
    "path" : "~/Documents/Masters/CS 249/Homework/HW0/HW0_Fitting_Distributions.R",
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}